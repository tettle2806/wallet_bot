from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton

from tg_bot.data.loader import db


def main_kb():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [
            KeyboardButton(text='‚ûï –î–æ—Ö–æ–¥—ã'),
            KeyboardButton(text='‚ûñ –†–∞—Å—Ö–æ–¥—ã')
        ],
        [
            KeyboardButton(text='‚ôªÔ∏è–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è')
        ],
        [
            KeyboardButton(text='üìà–ê–Ω–∞–ª–∏—Ç–∏–∫–∞')
        ],
        [
            KeyboardButton(text='‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
        ]
    ], row_width=2)
    return markup


def generate_categories(categories: list):
    buttons = []
    for category in categories:
        btn = KeyboardButton(text=category)
        buttons.append(btn)
    back = KeyboardButton(text='üîô –ù–∞–∑–∞–¥')
    buttons.append(back)
    result = [buttons[i:i + 2] for i in range(0, len(buttons), 2)]
    markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=result)
    return markup


def income_types():
    categories = [i[0] for i in db.select_incomes()]
    return generate_categories(categories)


def expense_types():
    categories = [i[0] for i in db.select_expenses()]
    return generate_categories(categories)


def conversion_usd_btn():
    categories = [i[0] for i in db.select_incomes_by_currency('usd')]
    return generate_categories(categories)


def conversion_uzs_btn():
    categories = [i[0] for i in db.select_incomes_by_currency('uzs')]
    return generate_categories(categories)

def subcategory_types(category):
    categories = [i[0] for i in db.select_subcategory(category)]
    if categories.__len__() == 0:
        markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [
                KeyboardButton(text='üîô –ù–∞–∑–∞–¥')
            ]
        ])
        return markup
    else:
        return generate_categories(categories)


def accept_transactions():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [
            KeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'),
            KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
        ]
    ])
    return markup


def back_btn():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, is_persistent=True, keyboard=[
        [
            KeyboardButton(text='üîô –ù–∞–∑–∞–¥')
        ]
    ])
    return markup


def menu_statistics():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [
            KeyboardButton(text='–ë–∞–ª–∞–Ω—Å')
        ],
        [
            KeyboardButton(text='–î–æ—Ö–æ–¥—ã'),
            KeyboardButton(text='–†–∞—Å—Ö–æ–¥—ã')
        ],
        [
            KeyboardButton(text='–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏'),
            KeyboardButton(text='üîô –ù–∞–∑–∞–¥')
        ]
    ])
    return markup


def uzs_usd_kb():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [
            KeyboardButton(text='UZS'),
            KeyboardButton(text='USD')
        ],
        [
            KeyboardButton(text='üîô –ù–∞–∑–∞–¥')
        ]
    ])
    return markup


def currency_btn():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [
            KeyboardButton(text='UZS ‚û°Ô∏è USD'),
            KeyboardButton(text='USD ‚û°Ô∏è UZS')
        ],
        [
            KeyboardButton(text='üîô –ù–∞–∑–∞–¥')
        ]
    ])
    return markup


def setting_btn():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [
            KeyboardButton(text='üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏')
        ],
        [
            KeyboardButton(text='‚ò¢Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å')
        ],
        [
            KeyboardButton(text='üîô –ù–∞–∑–∞–¥')
        ]
    ])
    return markup
