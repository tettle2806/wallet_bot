import hashlib

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from tg_bot.data.loader import db
from tg_bot.keyboards.reply import back_btn, main_kb, setting_btn, accept_transactions
from tg_bot.states.setting_state import Setting

settings_router = Router()


@settings_router.message(F.text == '‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
async def settings(message: Message, state: FSMContext):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å', reply_markup=back_btn())
    await state.set_state(Setting.password)


@settings_router.message(Setting.password)
async def password_setting_state(message: Message, state: FSMContext):
    chat_id = message.chat.id
    if message.text == 'üîô –ù–∞–∑–∞–¥':
        await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=main_kb())
        await state.clear()
    else:
        if db.select_password(chat_id)[0] == hashlib.sha256(message.text.encode('utf-8')).hexdigest():
            await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=setting_btn())
            await state.set_state(Setting.step1)
        else:
            await message.answer('–ù–µ –≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å')
            await state.set_state(Setting.password)


@settings_router.message(Setting.step1)
async def main_setting(message: Message, state: FSMContext):
    chat_id = message.chat.id
    if message.text == 'üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏':
        await message.answer('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=accept_transactions())
        await state.set_state(Setting.delete_tables)
    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=main_kb())
    elif message.text == '‚ò¢Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω—ã–Ω–µ—à–Ω–∏–π –ø–∞—Ä–æ–ª—å',reply_markup=back_btn())
        await state.set_state(Setting.set_pass)
    else:
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ')
        await state.set_state(Setting.step1)


@settings_router.message(Setting.delete_tables)
async def drop_transaction_table(message: Message, state: FSMContext):
    if message.text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        db.drop_transactions()
        db.create_transactions()
        await message.answer('–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ', reply_markup=setting_btn())
        await state.set_state(Setting.step1)
    elif message.text == '–û—Ç–º–µ–Ω–∏—Ç—å':
        await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=setting_btn())
        await state.set_state(Setting.step1)
    else:
        await message.answer('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=accept_transactions())
        await state.set_state(Setting.delete_tables)


@settings_router.message(Setting.set_pass)
async def set_pass_state(message: Message, state: FSMContext):
    chat_id = message.chat.id
    if message.text == 'üîô –ù–∞–∑–∞–¥':
        await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=setting_btn())
        await state.set_state(Setting.step1)
    else:
        if db.select_password(chat_id)[0] == hashlib.sha256(message.text.encode('utf-8')).hexdigest():
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å', reply_markup=back_btn())
            await state.set_state(Setting.new_password)
        else:
            await message.answer('–ù–µ –≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å')
            await state.set_state(Setting.set_pass)


@settings_router.message(Setting.new_password)
async def set_new_pass_state(message: Message, state: FSMContext):
    chat_id = message.chat.id
    if message.text == 'üîô –ù–∞–∑–∞–¥':
        await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=setting_btn())
        await state.set_state(Setting.step1)
    else:
        new_pass = hashlib.sha256(message.text.encode('utf-8')).hexdigest()
        db.insert_password(telegram_id=chat_id, password=new_pass)
        await message.answer('–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', reply_markup=setting_btn())
        await state.set_state(Setting.step1)